#
#  “Commons Clause” License, https://commonsclause.com/
#
#  The Software is provided to you by the Licensor under the License,
#  as defined below, subject to the following condition.
#
#  Without limiting other conditions in the License, the grant of rights
#  under the License will not include, and the License does not grant to
#  you, the right to Sell the Software.
#
#  For purposes of the foregoing, “Sell” means practicing any or all of
#  the rights granted to you under the License to provide to third parties,
#  for a fee or other consideration (including without limitation fees for
#  hosting or consulting/support services related to the Software), a
#  product or service whose value derives, entirely or substantially, from
#  the functionality of the Software. Any license notice or attribution
#  required by the License must also include this Commons Clause License
#  Condition notice.
#
#  Software:    NLPCraft
#  License:     Apache 2.0, https://www.apache.org/licenses/LICENSE-2.0
#  Licensor:    Copyright (C) 2018 DataLingvo, Inc. https://www.datalingvo.com
#
#      _   ____      ______           ______
#     / | / / /___  / ____/________ _/ __/ /_
#    /  |/ / / __ \/ /   / ___/ __ `/ /_/ __/
#   / /|  / / /_/ / /___/ /  / /_/ / __/ /_
#  /_/ |_/_/ .___/\____/_/   \__,_/_/  \__/
#         /_/
#

#
# DO NOT REMOVE CONFIGURARION PROPERTIES.
# ALL PROPERTIES ARE MANDATORY AND HAVE DEFAULT VALUES.
# VALUES CAN BE CHANGED BUT PROPERTIES CANNOT BE REMOVED OR ADDED.
#

# Database configuration.
postgres {
    jdbc {
        url = "jdbc:postgresql://localhost:5432/nlpcraft"
        driver = org.postgresql.Driver
        username = nlpcraft
        password = nlpcraft
    }

    c3p0 {
        maxStatements = 180

        pool {
            initSize = 10
            minSize = 1
            maxSize = 50
            acquireIncrement = 2
        }
    }
}

# REST server configuration.
rest {
    host = localhost
    port = 8081
}

# User manager configuration.
user {
    pwdPoolBlowup = 3
    timeoutScannerFreqMins = 1
    accessTokenExpireTimeoutMins = 60
}

# Plugin manager configuration.
plugins {
    notification = "org.nlpcraft.notification.plugins.noop.NCNoopNotificationPlugin"
    probe {
        auth = "org.nlpcraft.probe.plugins.auth.basic.NCBasicProbeAuthenticationPlugin"
    }
}

# 'NCRestPushNotificationPlugin' configuration.
# org.nlpcraft.notification.plugins.restpush.NCRestPushNotificationPlugin {
#     flushSecs = 5
#     maxBufferSize = 10000
#     batchSize = 50
#     endpoints = []
# }

# 'NCBasicProbeAuthenticationPlugin' configuration.
org.nlpcraft.probe.plugins.auth.basic.NCBasicProbeAuthenticationPlugin {
    # NOTE: this probe token should match the probe token in the probe.
    probe.token = "3141592653589793" # This is a default probe token (same as in probe's defaults).
}

# Probe manager configuration.
probe {
    links {
        # Default endpoints.
        # If changed - they need to be changed on both server and probe.
        p2s = "localhost:8201" # Probe-To-Server (P2S) uplink.
        s2p = "localhost:8202" # Server-To-Probe (S2P) downlink.
    }

    pingTimeoutMs = 2000
    soTimeoutMs = 5000
    reconnectTimeoutMs = 5000
    poolSize = 100
}

# Endpoint manager configuration.
endpoint {
    max.queue {
        # Maximum queue size for all users.
        size = 100000
        # Maximum queue size configuration for each user.
        per.user.size = 1000
        # Each configured time, overlapped queues shrinked.
        check.period.mins = 5
    }

    // Sending delays (attempt by attempt) if previous sending was not succesfull.
    // Fibonacci Numbers. Max delay - about 70 mins.
    delaysSecs = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]
}
